{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","bind","fetch","then","response","json","users","setState","e","this","target","value","filterMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAGaA,G,YAAO,SAACC,GAAD,OAChB,sBAAKC,UAAY,iBAAjB,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,2BACrB,mCAAOL,EAAMI,QAAQE,QACrB,kCAAKN,EAAMI,QAAQG,cCAfC,G,MAAW,SAACR,GAAD,OAGpB,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACrB,cAAC,EAAD,CAAyBA,QAAWA,GAAvBA,EAAQC,WCRtBM,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACzC,OACI,uBACAZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCmDCG,E,kDApDb,aAAgB,IAAD,8BACb,gBAEKC,MAAQ,CACXR,SAAW,GACXS,YAAc,IAGhB,EAAKL,aAAe,EAAKA,aAAaM,KAAlB,gBARP,E,gEAeM,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAChB,SAAWe,S,mCAK7BE,GACZC,KAAKF,SAAS,CAACP,YAAcQ,EAAEE,OAAOC,U,+BAI9B,IAAD,EAE2BF,KAAKV,MAA/BR,EAFD,EAECA,SAAUS,EAFX,EAEWA,YACZY,EAAkBrB,EAASsB,QAAO,SAAA3B,GAAO,OAC7CA,EAAQE,KAAK0B,cAAcC,SAASf,EAAYc,kBAGlD,OACI,sBAAK/B,UAAU,MAAf,UACC,mDAED,cAAC,EAAD,CACAW,YAAc,kBACdC,aAAgBc,KAAKd,eAInB,cAAC,EAAD,CAAUJ,SAAUqB,W,GA/CZI,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.38c19a8c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className = 'card-container'>\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2size=180x180`}/>\r\n         <h2 > {props.monster.name}</h2>\r\n         <p> {props.monster.email}</p>\r\n    </div>\r\n\r\n)\r\n","import React from 'react';\r\n\r\nimport { Card} from '../card/card.component'\r\n\r\nimport './card-list.styles.css';\r\n\r\n\r\nexport const CardList = (props) => (\r\n     \r\n    \r\n    <div className='card-list'>\r\n        {props.monsters.map(monster => (\r\n              <Card key = {monster.id} monster = {monster} />\r\n              ))}   \r\n        </div>\r\n        );\r\n\r\n\r\n","import React from 'react'\r\nimport './search-box.styles.css';\r\n\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => {\r\nreturn (\r\n    <input \r\n    className='search'\r\n    type=\"search\" \r\n    placeholder={placeholder}\r\n    onChange={handleChange}/>\r\n)\r\n}","import React, {Component} from 'react';\nimport './App.css';\nimport {CardList} from './components/card-list/card-list.component'\nimport { SearchBox } from './components/search-box/search-box.component'\n\n\n\nclass App extends Component {\n\n  constructor () {\n    super();\n\n    this.state = {\n      monsters : [],\n      searchField : ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  \n\n\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters : users}))\n\n\n  }\n\n  handleChange (e)  {\n    this.setState({searchField : e.target.value})\n  }\n\n\n  render() {\n\n    const { monsters, searchField } = this.state;\n    const filterMonsters  = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n\n    return (\n        <div className=\"App\">\n         <h1> Monsters Rolodex</h1>\n\n        <SearchBox \n        placeholder = 'search monsters'\n        handleChange = {this.handleChange} \n        />\n\n\n          <CardList monsters={filterMonsters}>\n     \n            </CardList> \n      </div>\n    )\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}